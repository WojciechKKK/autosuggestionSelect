{"version":3,"sources":["components/common/TitleParagraph.js","components/common/Counter.js","components/common/icons/Arrow.js","components/Title/Title.js","components/common/icons/Spinner.js","components/common/icons/DeleteIcon.js","components/common/SearchInputError.js","components/SearchInput/SearchInput.js","components/common/icons/CheckIcon.js","components/University/University.js","components/DropdownList/DropdownList.js","components/ButtonReset/ButtonReset.js","utils/getUserList.js","utils/objHasProperlyKey.js","utils/removeDuplicateObjInArray.js","utils/toggleUniversityStatus.js","utils/compareUserListWithChoosen.js","utils/prepareUniversistiesData.js","hooks/useFetchUniversities.js","consts/constsVariables.js","components/Dropdown/Dropdown.js","components/OutsideDropdownClose/OutsideDropdownClose.js","components/AutosuggestionSelect/AutosuggestionSelect.js","App.js","index.js"],"names":["TitleParagraph","styled","p","Counter","ArrowStyled","Arrow","isExpandList","iconColor","style","className","defaultProps","HeaderTitle","div","Title","title","items","fnClick","onClick","SpinnerStyled","i","Spinner","DeleteIconStyled","DeleteIcon","fnClearInput","SearchInputErrorStyled","SearchInputError","translation","inputError","SearchInputDiv","Input","input","SearchInput","value","fnOnChange","visibleError","loader","type","name","placeholder","inputPlaceholder","autoComplete","onChange","e","target","CheckIcon","color","UniveristyStyled","isChecked","University","details","DropdownListStyled","DropdownList","list","fnAddToUserList","length","map","university","key","ButtonResetStyled","button","ButtonReset","visible","buttonReset","getuserList","userList","universityName","filter","objHasProperlyKey","array","Array","isArray","every","obj","hasOwnProperty","removeDuplicateObjInArray","array1","array2","final","forEach","includes","push","console","error","toggleUniversityStatus","apiList","compareUserListWithChoosen","setUniversitiesCheckedStatus","prepareUniversistiesData","data","useFetchUniversities","setApiList","useState","setVisibleError","setLoader","inputValue","a","fetch","response","json","alert","translations","notFound","failedFetch","checkValidation","getApiData","DropdownStyled","isVisible","Dropdown","fnSetCounter","setInputValue","setUserList","debounceOnChange","useCallback","debounce","universityDetails","checkedUniversities","compareLists","concatUniversities","removeObjDuplicationInArray","log","getUserData","getUserList","OutsideDropdownClose","props","ref","fnToggleDropdown","children","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","AutosuggestionSelectStyled","AutosuggestionSelect","expandList","setExpandList","selecteditems","setSelecteditems","escFunction","prevState","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06bcb76c.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport '../../App.css'\r\n\r\nconst TitleParagraph = styled.p`\r\n  color: var(--text-color);\r\n  padding: var(--padding-input-emelents);\r\n  display: inline-block\r\n`\r\nexport default TitleParagraph","import styled from 'styled-components'\r\nimport '../../App.css';\r\n\r\nconst Counter = styled.p`\r\n  display: inline;\r\n  padding: var(--padding-dropdown-elements);\r\n  margin: 0 5px;\r\n  background: var(--text-color);\r\n  color: var(--text-color-white);\r\n  border-radius: 5px;\r\n`\r\nexport default Counter\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport '../../../App.css';\r\n\r\nconst ArrowStyled = styled.p`\r\n  padding: 0 5px;\r\n  color: var(--text-color);\r\n  display: inline-block;\r\n  align-items: center;\r\n`\r\nconst Arrow = ({isExpandList, iconColor}) => {\r\n  return (\r\n    <ArrowStyled>\r\n      <i style={{iconColor}} className={isExpandList ? 'fas fa-angle-up' : 'fas fa-angle-down'}></i>\r\n    </ArrowStyled>\r\n  )\r\n};\r\n\r\nArrow.defaultProps = {\r\n  iconColor: 'black'\r\n};\r\n\r\nArrow.propTypes = {\r\n  isExpandList: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Arrow","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport TitleParagraph from '../common/TitleParagraph';\r\nimport Counter from '../common/Counter';\r\nimport Arrow from '../common/icons/Arrow';\r\nimport '../../App.css';\r\n\r\nconst HeaderTitle = styled.div`\r\n  border-radius: var(--global-border-radius);\r\n  box-shadow: 0 0 10px grey;\r\n  margin: 10px 0;\r\n  width: var(--button-width);\r\n  cursor: pointer;\r\n  text-align: center;\r\n  &:hover {\r\n    background: var(--dropdown-background-hover);\r\n  };\r\n    ${({ isExpandList }) => isExpandList && `\r\n      position: relative;\r\n  `}\r\n`\r\nconst Title = ({title, isExpandList, items, fnClick}) => {\r\n  return (\r\n    <HeaderTitle isExpandList={isExpandList} onClick={() => fnClick()}>\r\n      <TitleParagraph>{title}</TitleParagraph>\r\n      <Counter>{items}</Counter>\r\n      <Arrow isExpandList={isExpandList} />\r\n    </HeaderTitle>\r\n  )\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  isExpandList: PropTypes.bool.isRequired,\r\n  items: PropTypes.number.isRequired,\r\n  fnClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport '../../../App.css';\r\n\r\nconst SpinnerStyled = styled.i`\r\n  color: var(--icon-spinner-color);\r\n  font-size: var(--icon-font-size);\r\n  padding: var(--icon-padding);\r\n`\r\n\r\nconst Spinner = () => {\r\n  return <SpinnerStyled className=\"fas fa-spinner fa-spin\"></SpinnerStyled>\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport '../../../App.css';\r\n\r\nconst DeleteIconStyled = styled.i`\r\n  display: inline-block;\r\n  padding: var(--icon-padding);\r\n  color: var(--icon-delete-color);\r\n  font-size: var(--icon-font-size);\r\n  cursor: pointer;\r\n  &:hover{\r\n    color: var(--icon-error-color)\r\n  }\r\n `\r\nconst DeleteIcon = ({fnClearInput}) => {\r\n  return (\r\n    <DeleteIconStyled onClick={fnClearInput} className=\"fa fa-trash\"></DeleteIconStyled>\r\n  )\r\n};\r\n\r\nexport default DeleteIcon;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport translation from '../../translations/translation.json';\r\nimport '../../App.css';\r\n\r\nconst SearchInputErrorStyled = styled.p`\r\n  color: var( --icon-error-color);\r\n  font-size: var(--error-font-size);\r\n  padding: 0px;\r\n  margin: 0px;\r\n  position: absolute;\r\n  bottom: 15px;\r\n  padding-left: var(--input-padding)\r\n  `\r\nconst SearchInputError = () => {\r\n  return (\r\n    <SearchInputErrorStyled>\r\n      {translation.inputError}\r\n    </SearchInputErrorStyled>\r\n  )\r\n};\r\n\r\nexport default SearchInputError;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Spinner from '../common/icons/Spinner';\r\nimport DeleteIcon from '../common/icons/DeleteIcon';\r\nimport SearchInputError from '../common/SearchInputError';\r\nimport translation from '../../translations/translation.json';\r\n\r\nconst SearchInputDiv = styled.div`\r\n  padding: calc(var(--dropdown-padding-element) *2) var(--dropdown-padding-element);\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  box-shadow: 0 4px 20px -4px grey;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 75%;\r\n  font-size: var(--input-font-size);\r\n  padding: var(--input-padding);\r\n  border-radius: var(--input-border-radius);\r\n  border: var(--input-border);\r\n  outline: none;\r\n  border-radius: var(--global-border-radius);\r\n  ::placeholder {\r\n    color: var(--input-placeholder);\r\n  }\r\n  &:focus {\r\n    border: var(--input-border-focus);\r\n  }\r\n`;\r\n\r\nconst SearchInput = ({value, fnOnChange, visibleError, loader, fnClearInput}) => {\r\n  return (\r\n    <SearchInputDiv>\r\n      <Input \r\n        type=\"text\" \r\n        name=\"universities\" \r\n        value={value} \r\n        placeholder={translation.inputPlaceholder}\r\n        autoComplete=\"off\"\r\n        onChange={e => fnOnChange(e.target.value)} \r\n      />\r\n      { loader \r\n        ? <Spinner /> \r\n        : <DeleteIcon fnClearInput={fnClearInput} />\r\n      }\r\n      { visibleError && <SearchInputError /> }\r\n    </SearchInputDiv>\r\n  )\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  value: PropTypes.string,\r\n  fnOnChange: PropTypes.func.isRequired,\r\n  visibleError: PropTypes.bool.isRequired,\r\n  loader: PropTypes.bool.isRequired,\r\n  fnClearInput: PropTypes.func.isRequired\r\n}\r\nexport default SearchInput;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst CheckIcon = ({ iconColor }) => {\r\n  return <i className=\"fas fa-check\" style={{color: iconColor}}></i>\r\n};\r\n\r\nCheckIcon.defaultProps = {\r\n  iconColor: 'green'\r\n};\r\n\r\nCheckIcon.propTypes = {\r\n  iconColor: PropTypes.string\r\n}\r\nexport default CheckIcon","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport '../../App.css';\r\nimport CheckIcon from '../common/icons/CheckIcon';\r\n\r\nconst UniveristyStyled = styled.div`\r\n  width: 100%;\r\n  padding: 20px 0px;\r\n  border-bottom: var(--dropdown-border-element);\r\n  font-size: var(--input-font-size);\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  word-break: break-word;\r\n  ${({isChecked}) => isChecked && `\r\n    font-weight: var(--font-weight-bold);\r\n  `}\r\n  &:hover {\r\n    color: var(--university-text-hover)\r\n  }\r\n\r\n`;\r\n\r\nconst University = ({details, fnClick}) => {\r\n  const { isChecked } = details;\r\n  return (\r\n    <UniveristyStyled onClick={() => fnClick(details)}isChecked={isChecked}>\r\n      {details?.name} \r\n      { isChecked && <CheckIcon /> }\r\n    </UniveristyStyled>\r\n  )\r\n};\r\n\r\nexport default University;","import React from 'react';\r\nimport University from '../University/University';\r\nimport styled from 'styled-components';\r\nimport '../../App.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DropdownListStyled = styled.div`\r\n  padding: var(--dropdown-padding-element);\r\n  padding-top: 0;\r\n  max-height: var(--dropdown-height);\r\n  overflow: auto\r\n`\r\nconst DropdownList = ({list, fnAddToUserList}) => {\r\n  \r\n  if(!list.length){\r\n    return null\r\n  };\r\n\r\n  return (\r\n    <DropdownListStyled>\r\n      {list.map(university => (\r\n        <University \r\n          key={university.name} \r\n          details={university}\r\n          fnClick={fnAddToUserList} \r\n        />\r\n      ))}\r\n    </DropdownListStyled>\r\n  )\r\n};\r\n\r\nDropdownList.propTypes = {\r\n  list: PropTypes.array,\r\n  fnAddToUserList: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DropdownList;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport translation from '../../translations/translation.json';\r\nimport '../../App.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ButtonResetStyled = styled.button`\r\n  width: 100%;\r\n  border: none;\r\n  padding: var(--button-padding);\r\n  background: var(--button-background-color);\r\n  color: var(--button-text-color);\r\n  font-size: var(--button-font-size);\r\n  cursor: pointer;\r\n  border-bottom-left-radius: var(--global-border-radius);\r\n  border-bottom-right-radius: var(--global-border-radius);\r\n  &:hover {\r\n    background: var(--button-background-color-hover)\r\n  }\r\n`\r\nconst ButtonReset = ({fnClick, visible}) => {\r\n  if(!visible){\r\n    return null\r\n  };\r\n\r\n  return (\r\n    <ButtonResetStyled onClick={fnClick}>\r\n      {translation.buttonReset}\r\n    </ButtonResetStyled>\r\n  )\r\n};\r\n\r\nButtonReset.propTypes = {\r\n  fnClick: PropTypes.func.isRequired,\r\n  visible: PropTypes.bool.isRequired\r\n};\r\n\r\n\r\nexport default ButtonReset","const getuserList = (userList, universityName) => {\r\n  if(!userList.length) {\r\n    return []\r\n  }\r\n  return userList.filter(({name, isChecked}) => name !== universityName && isChecked)\r\n};\r\n\r\nexport default getuserList;","const objHasProperlyKey = array => {\r\n  if(!Array.isArray(array)){\r\n    return false\r\n  }\r\n  return array.every(obj => obj.hasOwnProperty('name'))\r\n};\r\n\r\nexport default objHasProperlyKey; ","import objHasProperlyKey from \"./objHasProperlyKey\";\r\n\r\nconst removeDuplicateObjInArray = (array1, array2) => {\r\n  const final = [];\r\n\r\n  if(!objHasProperlyKey(array1) || !objHasProperlyKey(array2)){\r\n    console.error('Failed with remove duplication')\r\n    return final\r\n  }\r\n\r\n  [...array1, ...array2].forEach(obj => {\r\n    if(!(final.map(({name}) => name).includes(obj.name))){\r\n      final.push(obj)\r\n    }\r\n  })\r\n  return final;\r\n}\r\n\r\nexport default removeDuplicateObjInArray","const toggleUniversityStatus = (apiList, universityName) => {\r\n  return apiList.map(university => {\r\n    if(university.name === universityName){\r\n      return ({...university, isChecked: !university.isChecked})\r\n    } else {\r\n      return university\r\n    }\r\n  });\r\n};\r\n\r\nexport default toggleUniversityStatus;","const compareUserListWithChoosen = (userList, setUniversitiesCheckedStatus) => {\r\n  return userList\r\n  .map(university => {\r\n    if(setUniversitiesCheckedStatus.map(({name}) => name).includes(university.name)){\r\n      return setUniversitiesCheckedStatus.filter(({name}) => name === university.name)[0]\r\n    } else {\r\n      return university\r\n    }\r\n  })\r\n  .filter(({isChecked}) => isChecked)\r\n};\r\n\r\nexport default compareUserListWithChoosen;","export const prepareUniversistiesData = (data, userList) => {\r\n  if(!data.length){\r\n    return []\r\n  }\r\n  return data\r\n        .map(university => {\r\n          if((userList.map(({name}) => name)).includes(university.name)){\r\n            return ({...university, isChecked: true})\r\n          } else {\r\n            return ({...university, isChecked: false})\r\n          }\r\n  });\r\n}","import { useState } from 'react';\r\nimport {prepareUniversistiesData} from '../utils/prepareUniversistiesData';\r\nimport translations from '../translations/translation.json';\r\nimport { MIN_INPUT_TEXT_LENGTH, UNIVERSITIES_API_NAME}  from '../consts/constsVariables';\r\n\r\nexport const useFetchUniversities = (setApiList) => {\r\n  const [visibleError, setVisibleError] = useState(false);\r\n  const [ loader, setLoader] = useState(false);\r\n\r\n  const checkValidation = (inputValue, userList) => {\r\n    if(inputValue.length > MIN_INPUT_TEXT_LENGTH){\r\n      setVisibleError(false);\r\n      getApiData(inputValue, userList)\r\n    } else {\r\n      if(inputValue === '') {\r\n        setVisibleError(false);\r\n      } else {\r\n        setVisibleError(true);\r\n      }\r\n    setApiList([]);\r\n    }\r\n  };\r\n\r\n  async function getApiData(inputValue, userList){\r\n    setLoader(true)\r\n    try {\r\n      const response = await fetch(`${UNIVERSITIES_API_NAME}${inputValue}`);\r\n      const data = await response.json();\r\n      if(!data.length){\r\n        alert(`'${inputValue}' ${translations.notFound}`)\r\n      } else {\r\n        setApiList(prepareUniversistiesData(data, userList))\r\n      }\r\n    } catch(err){\r\n      console.error(translations.failedFetch, err)\r\n    } finally {\r\n      setLoader(false)\r\n    }\r\n  }\r\n\r\n  return { checkValidation, loader, visibleError }\r\n}","const MAX_RESPONSE_TIME = 400;\r\nconst MIN_INPUT_TEXT_LENGTH = 3;\r\nconst UNIVERSITIES_API_NAME = \"http://universities.hipolabs.com/search?name=\";\r\n\r\nexport { MAX_RESPONSE_TIME, MIN_INPUT_TEXT_LENGTH, UNIVERSITIES_API_NAME}","import React, {useState, useCallback, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport '../../App.css'\r\nimport SearchInput from '../SearchInput/SearchInput';\r\nimport DropdownList from '../DropdownList/DropdownList';\r\nimport ButtonReset from '../ButtonReset/ButtonReset';\r\nimport getUserList from '../../utils/getUserList';\r\nimport removeObjDuplicationInArray from '../../utils/removeDuplicateObjInArray';\r\nimport toggleUniversityStatus from '../../utils/toggleUniversityStatus';\r\nimport compareUserListWithChoosen from '../../utils/compareUserListWithChoosen';\r\nimport {useFetchUniversities }from '../../hooks/useFetchUniversities';\r\nimport { debounce } from \"lodash\";\r\nimport { MAX_RESPONSE_TIME } from '../../consts/constsVariables';\r\n\r\nconst DropdownStyled = styled.div`\r\n  border-radius: var(--global-border-radius);\r\n  transition: 0.25s ease all;\r\n  transform: scale(0);\r\n  transform-origin: 0 1;\r\n  box-shadow: var(--dropdown-box-shadow);\r\n  width: var(--dropdown-width);\r\n  ${({isVisible}) => isVisible && `\r\n    transform: scale(1);\r\n  `}\r\n` \r\n\r\nconst Dropdown = ({isVisible, fnSetCounter}) => {\r\n  const [ inputValue, setInputValue] = useState('');\r\n  const [ userList, setUserList] = useState([]);\r\n  const [apiList, setApiList] = useState([]);\r\n  const {checkValidation, loader, visibleError} = useFetchUniversities(setApiList);\r\n  const debounceOnChange = useCallback(debounce(checkValidation, MAX_RESPONSE_TIME),[]);\r\n\r\n  const setValueWithDebounce = (value) => {\r\n    setInputValue(value);\r\n    debounceOnChange(value, userList)\r\n  }\r\n\r\n  const resetList = () => {\r\n    setApiList([]);\r\n    setUserList([]);\r\n    fnSetCounter(0);\r\n    console.log(\"Update\", []);\r\n  }\r\n\r\n  const clearInputData = () => {\r\n    setInputValue('');\r\n    setApiList([]);\r\n  }\r\n  \r\n  const addToUserList = universityDetails => {\r\n    if(!apiList.length){\r\n      const getUserData = getUserList(userList, universityDetails.name);\r\n      fnSetCounter(getUserData.length);\r\n      setUserList(getUserData);\r\n      console.log(\"Update\", getUserData)\r\n    } else {\r\n      const setUniversitiesCheckedStatus = toggleUniversityStatus(apiList, universityDetails.name);\r\n      const checkedUniversities = setUniversitiesCheckedStatus.filter(({isChecked}) => isChecked)\r\n      const compareLists = compareUserListWithChoosen(userList, setUniversitiesCheckedStatus)\r\n      const concatUniversities = removeObjDuplicationInArray(compareLists, checkedUniversities);\r\n\r\n      setApiList(setUniversitiesCheckedStatus);\r\n      setUserList(concatUniversities);\r\n      fnSetCounter(concatUniversities.length);\r\n      console.log(\"Update\", concatUniversities)\r\n    }\r\n  };\r\n\r\n  // for hide components - remove transform: scale(0);\r\n  // if(!isVisible) {\r\n  //   return null;\r\n  // };\r\n\r\n  return (\r\n    <DropdownStyled isVisible={isVisible}>\r\n      <SearchInput \r\n        value={inputValue} \r\n        fnOnChange={setValueWithDebounce} \r\n        visibleError={visibleError} \r\n        loader={loader} \r\n        fnClearInput={clearInputData}\r\n      />\r\n      <DropdownList \r\n        list={apiList.length ? apiList : userList} \r\n        fnAddToUserList={addToUserList} \r\n      />\r\n      <ButtonReset \r\n        fnClick={resetList}\r\n        visible={!!apiList.length || !!userList.length}\r\n      />\r\n    </DropdownStyled>\r\n  )\r\n};\r\n\r\nDropdown.propTypes = {\r\n  isVisible: PropTypes.bool.isRequired,\r\n  fnSetCounter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Dropdown","import React, { useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction useOutsideAlerter(ref, fnToggleDropdown) {\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        fnToggleDropdown(false)\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [ref]);\r\n}\r\nfunction OutsideDropdownClose(props) {\r\n  const { children, fnClick} = props;\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, fnClick);\r\n  return <div ref={wrapperRef}>{children}</div>;\r\n}\r\n\r\nOutsideDropdownClose.propTypes = {\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default OutsideDropdownClose;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Title from '../Title/Title';\r\nimport Dropdown from '../Dropdown/Dropdown';\r\nimport styled from 'styled-components';\r\nimport translation from '../../translations/translation.json'\r\nimport OutsideDropdownClose from '../OutsideDropdownClose/OutsideDropdownClose';\r\n\r\nconst AutosuggestionSelectStyled = styled.div`\r\n  position absolute;\r\n  top: 25px;\r\n  left: 30vw;\r\n  @media (max-width: 768px) {\r\n    left: 4vw;\r\n  }\r\n`\r\nconst AutosuggestionSelect = () => {\r\n  const [ expandList, setExpandList] = useState(false);\r\n  const [selecteditems, setSelecteditems] = useState(0);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", escFunction, false);\r\n    };\r\n  }, []);\r\n\r\n  const toggleDropdown = () => setExpandList(prevState => !prevState);\r\n\r\n  const escFunction = e => {\r\n    if(e.key === 'Escape'){\r\n      setExpandList(false)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OutsideDropdownClose fnClick={setExpandList}>\r\n      <AutosuggestionSelectStyled>\r\n        <Title \r\n          title={translation.title} \r\n          isExpandList={expandList} \r\n          items={selecteditems}\r\n          fnClick={toggleDropdown} \r\n        />\r\n        <Dropdown \r\n          isVisible={expandList} \r\n          fnSetCounter={setSelecteditems}\r\n        />\r\n      </AutosuggestionSelectStyled>\r\n    </OutsideDropdownClose>\r\n  )\r\n};\r\n\r\nexport default AutosuggestionSelect;","import './App.css';\nimport React from 'react';\nimport AutosuggestionSelect from './components/AutosuggestionSelect/AutosuggestionSelect';\n\nconst App = () => {\n  return (\n    <div className=\"app\"> \n      <AutosuggestionSelect />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}